# steps:
#   - name: 'gcr.io/cloud-builders/gcloud'
#     entrypoint: 'bash'
#     args: ['-c', 'chmod +x ./snapshot_script.sh && ./snapshot_script.sh']
#     env: ['PROJECT_FILE=$_BATCH_FILE' ]
# options:
#   logging: CLOUD_LOGGING_ONLY


# steps:
#   - name: 'gcr.io/cloud-builders/gcloud'
#     entrypoint: 'bash'
#     args:
#       - '-c'
#       - |
#         chmod +x ./snapshot_script.sh
#         ./snapshot_script.sh "$_BATCH_FILE"
# options:
#   logging: CLOUD_LOGGING_ONLY

# steps:
#   - name: 'gcr.io/cloud-builders/gcloud'
#     entrypoint: 'bash'
#     args:
#       - '-c'
#       - |
#         set -e
#         chmod +x ./snapshot_script.sh
#         echo "Running snapshot script for file: $_BATCH_FILE"
#         ls -l "$_BATCH_FILE" || { echo "‚ùå File not found: $_BATCH_FILE"; exit 1; }
#         cat "$_BATCH_FILE"
#         ./snapshot_script.sh "$_BATCH_FILE"
# options:
#   logging: CLOUD_LOGGING_ONLY


steps:
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e
        echo "üîé Active account in Cloud Build:"
        gcloud auth list
        echo "üîé Current project:"
        gcloud config get-value project
        chmod +x ./snapshot_script.sh
        echo "Running snapshot script for file: $_BATCH_FILE"
        ls -l "$_BATCH_FILE" || { echo "‚ùå File not found: $_BATCH_FILE"; exit 1; }
        cat "$_BATCH_FILE"
        ./snapshot_script.sh "$_BATCH_FILE"
        echo "Testing VM list for project: my-exp-470312"
        gcloud compute instances list --project="my-exp-470312"
       
options:
  logging: CLOUD_LOGGING_ONLY